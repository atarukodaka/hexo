<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/hexo/atom.xml" rel="self"/>
  
  <link href="http://atarukodaka.github.io/hexo/"/>
  <updated>2017-02-27T06:31:07.254Z</updated>
  <id>http://atarukodaka.github.io/hexo/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HEXO を vagrant 上で使ってみる</title>
    <link href="http://atarukodaka.github.io/hexo/software/hexo-vagrant.html"/>
    <id>http://atarukodaka.github.io/hexo/software/hexo-vagrant.html</id>
    <published>2017-02-26T15:00:00.000Z</published>
    <updated>2017-02-27T06:31:07.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h2><p>今まで middleman に手を加えてサイトを作ってたのですが、<br>ビルドが遅かったりなんで HEXO を試してみたら速いしよさげ。</p>
<h2 id="インストール"><a href="#インストール" class="headerlink" title="インストール"></a>インストール</h2><h3 id="nvmを入れる"><a href="#nvmを入れる" class="headerlink" title="nvmを入れる"></a>nvmを入れる</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash</div><div class="line">$ <span class="built_in">exit</span></div><div class="line">% vagrant ssh</div><div class="line">$ nvm --version</div><div class="line">0.33.1</div></pre></td></tr></table></figure>
<h3 id="node-js-を入れる"><a href="#node-js-を入れる" class="headerlink" title="node.js を入れる"></a>node.js を入れる</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nvm install stable</div></pre></td></tr></table></figure>
<h3 id="hexo-を入れる"><a href="#hexo-を入れる" class="headerlink" title="hexo を入れる"></a>hexo を入れる</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nvm install hexo-cli -g</div></pre></td></tr></table></figure>
<h2 id="プロジェクトを作成する"><a href="#プロジェクトを作成する" class="headerlink" title="プロジェクトを作成する"></a>プロジェクトを作成する</h2><p>共有フォルダ上だとシンボリックリンクのエラーが出るので、それ以外でやる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">% hexo init proj</div></pre></td></tr></table></figure>
<h3 id="ソースファイルを共有フォルダにする"><a href="#ソースファイルを共有フォルダにする" class="headerlink" title="ソースファイルを共有フォルダにする"></a>ソースファイルを共有フォルダにする</h3><p>_config.yml をいじる：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Directory</div><div class="line">#source_dir: source</div><div class="line">source_dir: /home/vagrant/src/hexo/source</div><div class="line">public_dir: public</div></pre></td></tr></table></figure>
<h2 id="参考サイト"><a href="#参考サイト" class="headerlink" title="参考サイト"></a>参考サイト</h2><ul>
<li><a href="http://blog.walfo.jp/vagrant-nvm-install/" target="_blank" rel="external">Vagrant, nvm と Node.js をインストールする – Supertrue</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HEXO&quot;&gt;&lt;a href=&quot;#HEXO&quot; class=&quot;headerlink&quot; title=&quot;HEXO&quot;&gt;&lt;/a&gt;HEXO&lt;/h2&gt;&lt;p&gt;今まで middleman に手を加えてサイトを作ってたのですが、&lt;br&gt;ビルドが遅かったりなんで HEXO を試してみたら
    
    </summary>
    
      <category term="software" scheme="http://atarukodaka.github.io/hexo/categories/software/"/>
    
      <category term="hexo" scheme="http://atarukodaka.github.io/hexo/categories/software/hexo/"/>
    
    
      <category term="vagrant" scheme="http://atarukodaka.github.io/hexo/tags/vagrant/"/>
    
      <category term="hexo" scheme="http://atarukodaka.github.io/hexo/tags/hexo/"/>
    
      <category term="SSG" scheme="http://atarukodaka.github.io/hexo/tags/SSG/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://atarukodaka.github.io/hexo/software/hugo-vagrant.html"/>
    <id>http://atarukodaka.github.io/hexo/software/hugo-vagrant.html</id>
    <published>2017-02-25T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.255Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><a href="https://golang.org/dl/" target="_blank" rel="external">https://golang.org/dl/</a> から go1.8.linux-amd64.tar.gz を展開し go/bin に path を通す。<br>-展開先は、/usr/local か、それ以外なら $GOROOT を設定</li>
<li>git clone <a href="https://github.com/spf13/hugo" target="_blank" rel="external">https://github.com/spf13/hugo</a> を入手し cd hugo; go get</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://golang.org/dl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://golang.org/dl/&lt;/a&gt; から go1.8.linux-amd64.tar.gz を展開し go/bin 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>フィギュアスケート・チートシート</title>
    <link href="http://atarukodaka.github.io/hexo/figureskating/cheat_sheet.html"/>
    <id>http://atarukodaka.github.io/hexo/figureskating/cheat_sheet.html</id>
    <published>2017-02-21T15:00:00.000Z</published>
    <updated>2017-02-27T05:48:46.741Z</updated>
    
    <content type="html"><![CDATA[<h2 id="チートシート"><a href="#チートシート" class="headerlink" title="チートシート"></a>チートシート</h2><p>チートシートとは、いわゆるカンニングペーパーのことで、覚えておくべき、でも忘れてしまいがちな事項を一枚紙にまとめておくものです（プログラミング等でよく用いられる）。</p>
<p>フィギュアスケート（のルール）の場合、基礎点や要件、レベル特徴など、年々変更されるため覚えておくのが難しく、それらをまとめていつでも参照できるようペーパーを作ってみました。</p>
<p>内容としては、以下のとおり：</p>
<ul>
<li>vol.1: ジャンプ規定</li>
<li>vol.2: スピン規定</li>
<li>vol.3: ステップ規定、PCS</li>
</ul>
<p>文字数やスペースの関係でかなり説明を省いており、正確性には欠けますので、必要に応じてハンドブック等を確認してください。<br>修正コメント等は <a href="http://www.twitter.com/ataru_kodaka" target="_blank" rel="external">@ataru_kodaka</a> まで。</p>
<h2 id="2016-17年シーズン準拠版"><a href="#2016-17年シーズン準拠版" class="headerlink" title="2016-17年シーズン準拠版"></a>2016-17年シーズン準拠版</h2><h3 id="PDF："><a href="#PDF：" class="headerlink" title="PDF："></a>PDF：</h3><p>[<a href="/images/figureskating_cheet_sheet_2016-17_ver1.05.pdf">フィギュアスケート・チートシート2016-17準拠PDF版ver1.05</a> (PDF:760KB)]</p>
<h3 id="画像："><a href="#画像：" class="headerlink" title="画像："></a>画像：</h3><p>&lt;% 1.upto(3).each do |i| %&gt;</p>
<p><div style="float: left; "><br>&lt;% url = “/images/cheat_sheet_vol#{i}.png” %&gt;<br><a href="<%= url %>"><img src="<%= url %>" width="200"></a><br></div><br>&lt;% end %&gt;<br><br clear="all"><br><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;チートシート&quot;&gt;&lt;a href=&quot;#チートシート&quot; class=&quot;headerlink&quot; title=&quot;チートシート&quot;&gt;&lt;/a&gt;チートシート&lt;/h2&gt;&lt;p&gt;チートシートとは、いわゆるカンニングペーパーのことで、覚えておくべき、でも忘れてしまいがちな事項を一枚紙にま
    
    </summary>
    
      <category term="figureskating" scheme="http://atarukodaka.github.io/hexo/categories/figureskating/"/>
    
    
  </entry>
  
  <entry>
    <title>2017冬イベント「光作戦」</title>
    <link href="http://atarukodaka.github.io/hexo/game/kancolle/event/2017-winter.html"/>
    <id>http://atarukodaka.github.io/hexo/game/kancolle/event/2017-winter.html</id>
    <published>2017-02-15T15:00:00.000Z</published>
    <updated>2017-02-27T05:55:16.934Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考サイト"><a href="#参考サイト" class="headerlink" title="参考サイト"></a>参考サイト</h2><ul>
<li><a href="http://zekamashi.net/category/201702-event/" target="_blank" rel="external">「☆偵察戦力緊急展開！「光」作戦(2017冬)」の記事一覧 | ぜかましねっと艦これ！</a></li>
<li><a href="http://akankorebiyori.blog.fc2.com/blog-category-95.html" target="_blank" rel="external">★偵察戦力緊急展開！「光」作戦 | あ艦これ日和　-　艦これ攻略情報,プレイ日記</a></li>
</ul>
<h2 id="マップ"><a href="#マップ" class="headerlink" title="マップ"></a>マップ</h2><h3 id="E1乙"><a href="#E1乙" class="headerlink" title="E1乙"></a>E1乙</h3><p>潜水艦隊で３回出撃でサクッとクリア</p>
<h3 id="E2乙"><a href="#E2乙" class="headerlink" title="E2乙"></a>E2乙</h3><h4 id="削り：輸送"><a href="#削り：輸送" class="headerlink" title="削り：輸送"></a>削り：輸送</h4><p>TP:400</p>
<ul>
<li>熊野（司令部）、江風（大発）、皐月（大発ドラム）、霞（大発）、朝潮（大発）、千代田甲（二式水戦）</li>
<li>鬼怒（20.3x2、大発）、秋月（対空）、潮（10cm高角x2、ドラム）、大潮（10cm高角x2、大発）、プリ、鈴谷（夜偵、照明灯）</li>
</ul>
<p>試行：</p>
<ol>
<li>A:116</li>
<li>A:116</li>
<li>C:0</li>
<li>A:118</li>
<li>A:50 →　クリア</li>
</ol>
<h4 id="ゲージ破壊：機動部隊"><a href="#ゲージ破壊：機動部隊" class="headerlink" title="ゲージ破壊：機動部隊"></a>ゲージ破壊：機動部隊</h4><ul>
<li>熊野（司令部）、天城、葛城、雲龍、サトラガ、千代田甲（二式水戦）：対空485-524</li>
<li>鬼怒（20.3x2、大発）、秋月（対空）、江風（大発）、大潮（10cm高角x2、大発）、プリ、鈴谷（夜偵、照明灯）</li>
</ul>
<h3 id="E3乙"><a href="#E3乙" class="headerlink" title="E3乙"></a>E3乙</h3><ul>
<li>彩雲輸送：潜水艦６（紫雲２）w/決戦支援</li>
<li>ギミック解除：I:潜水艦６</li>
<li>ゲージ削り、攻略<ul>
<li>戦艦４、ちよちと</li>
<li>阿武隈、綾波、摩耶、夕立、妙高、北上</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;参考サイト&quot;&gt;&lt;a href=&quot;#参考サイト&quot; class=&quot;headerlink&quot; title=&quot;参考サイト&quot;&gt;&lt;/a&gt;参考サイト&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zekamashi.net/category/201702-event/
    
    </summary>
    
      <category term="ゲーム" scheme="http://atarukodaka.github.io/hexo/categories/%E3%82%B2%E3%83%BC%E3%83%A0/"/>
    
      <category term="艦これ" scheme="http://atarukodaka.github.io/hexo/categories/%E3%82%B2%E3%83%BC%E3%83%A0/%E8%89%A6%E3%81%93%E3%82%8C/"/>
    
      <category term="イベント" scheme="http://atarukodaka.github.io/hexo/categories/%E3%82%B2%E3%83%BC%E3%83%A0/%E8%89%A6%E3%81%93%E3%82%8C/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/"/>
    
    
  </entry>
  
  <entry>
    <title>middleman v4 の collection と resources 機能を使ってみる</title>
    <link href="http://atarukodaka.github.io/hexo/software/middleman/v4-resources-collection.html"/>
    <id>http://atarukodaka.github.io/hexo/software/middleman/v4-resources-collection.html</id>
    <published>2017-02-15T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.299Z</updated>
    
    <content type="html"><![CDATA[<p>middlemn v4 では resources と collection というのが導入されたらしいのですが、<a href="https://middlemanapp.com/jp/basics/upgrade-v4/#コレクション" target="_blank" rel="external">公式ドキュメント</a>を見てもいまいち分かりにくいです。どうやらわざわざextension で manipulate_resource_list() を使わなくても手軽にリソース操作ができるっぽいですね。</p>
<h3 id="resources-を使ってみる。"><a href="#resources-を使ってみる。" class="headerlink" title="resources を使ってみる。"></a>resources を使ってみる。</h3><p>とりあえず、すべてのリソースに ‘foo’ というローカル変数を使えるようにしてみます。config.rb に</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">resources.each &#123;<span class="params">|res|</span></div><div class="line">  res.add_metadata(<span class="symbol">locals:</span> &#123;<span class="symbol">foo:</span> <span class="string">"YES! FOO!!!"</span>&#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>と書くだけで、*.html.erb で</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">foo? &lt;%= foo %&gt;</div></pre></td></tr></table></figure>
<p>と使えるようです。確かに便利ですね。v3ではこれをするのには Middleman::Extension から派生させたクラスを作って manipulate_resource_list() を書いてそのクラスを Middleman::Extensions に register して activate して、、、という手順を踏まなければなりませんでしたから。</p>
<h3 id="collection-を使ってみる"><a href="#collection-を使ってみる" class="headerlink" title="collection を使ってみる"></a>collection を使ってみる</h3><p>ドキュメントのタグの例題が分かりにくいので、ここでは、<strong>「見てほしい記事に mitene: 100 とかフロントマターにつけて大きい順に表示する」</strong>というのをやってみたいと思います。</p>
<p>config.rb:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mitene = resources.select &#123;<span class="params">|r|</span> r.data.mitene &#125;.sort_by &#123;<span class="params">|r|</span> r.data.mitene&#125;.reverse</div><div class="line"></div><div class="line">collection <span class="symbol">:mitene</span>, mitene</div></pre></td></tr></table></figure>
<p>というふうに、collection() を使って、あるシンボルに対して、<strong>resources から始まるチェーンから作られたオブジェクト</strong>を紐付けしてあげます。そうすると mitene.html.erb でそのシンボルを使って、</p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>みてね！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> collection(<span class="symbol">:mitene</span>).each <span class="keyword">do</span> <span class="params">|res|</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> link_to(res.data.title, res) </span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> <span class="keyword">end</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>というふうに、集めておいたオブジェクトを呼び出せるようです。</p>
<p>また、config.rb:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mitene = resources.select &#123;<span class="params">|r|</span> r.data.mitene &#125;.group_by &#123;<span class="params">|r|</span> r.data.mitene &#125;</div><div class="line">collection <span class="symbol">:mitene</span>, mitene</div></pre></td></tr></table></figure>
<p>とハッシュにしてあげて</p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>みてね！順<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> collection(<span class="symbol">:mitene</span>).sort_by &#123;<span class="params">|r, v|</span> r&#125;.reverse.each <span class="keyword">do</span> <span class="params">|key, items|</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> key </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> items.each <span class="keyword">do</span> <span class="params">|res|</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> link_to(res.data.title, res) </span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> <span class="keyword">end</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> <span class="keyword">end</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>と受け取ることも出来ます。</p>
<p>ちょっとリソースに手を加えたり、特定の条件のリソースを集めておいてテンプレートで使うということが手軽にできそうな感じです。</p>
<p>また分かり次第追記していきます。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;middlemn v4 では resources と collection というのが導入されたらしいのですが、&lt;a href=&quot;https://middlemanapp.com/jp/basics/upgrade-v4/#コレクション&quot; target=&quot;_blank&quot; r
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>フレームワーク構想</title>
    <link href="http://atarukodaka.github.io/hexo/software/middleman/framework_consideration.html"/>
    <id>http://atarukodaka.github.io/hexo/software/middleman/framework_consideration.html</id>
    <published>2017-02-03T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.281Z</updated>
    
    <content type="html"><![CDATA[<h2 id="middleman-ベースで作りたいと思ってること"><a href="#middleman-ベースで作りたいと思ってること" class="headerlink" title="middleman ベースで作りたいと思ってること"></a>middleman ベースで作りたいと思ってること</h2><ul>
<li>middleman-blog だとソースファイル名に日付をつけることが前提になってるのがイヤ（frontmatterに date: つければいいんだけど）<ul>
<li>hack してみたけど、あんま美しくならない</li>
</ul>
</li>
<li>game/kancolle/event/2015-summary.html.md をつくると、自動的に game/index.html, game/kancolle/index.html, game/kancolle/event/index.html にサマリー作ってほしい<ul>
<li><a href="https://github.com/yterajima/middleman-tansu" target="_blank" rel="external">https://github.com/yterajima/middleman-tansu</a> が近い？</li>
</ul>
</li>
<li>デザインは <a href="http://grabacr.net/" target="_blank" rel="external">http://grabacr.net/</a> さんとこがいい感じ</li>
<li>archives は月別があればいい</li>
<li>連載記事サポート機能<ul>
<li>software/middleman/01-ready.html.md, …/02-start.html.md  とかすると title に自動的に 第n回とか入ってほしい</li>
</ul>
</li>
<li>pagination は欲しい</li>
<li>tag はあんま使わない</li>
</ul>
<p>ってんで<br><a href="http://atarukodaka.github.io/software/middleman/middleman-akcms.html">http://atarukodaka.github.io/software/middleman/middleman-akcms.html</a>　<br>のように動くのを akcms と銘打って <a href="https://github.com/atarukodaka/middleman-akcms/" target="_blank" rel="external">https://github.com/atarukodaka/middleman-akcms/</a> としてみたけど、いろいろごちゃごちゃしてきてどうしようかと。</p>
<h2 id="問題、提案など"><a href="#問題、提案など" class="headerlink" title="問題、提案など"></a>問題、提案など</h2><ul>
<li>resource にインスタンスをつけたいんだけど、Middleman::Sitemap::Resource 直にモンキーパッチあてるのは避けたいし、<ul>
<li>manipulate_resource_list() で each resource に extend してもいいんだけど、pagination するときに ProxyResource を new すると extend されてないんでモニョ. clone してもパラメータ上書きできないし</li>
<li>link template は apply_uri_template するよいか proxy resource へのハッシュを持っておいて link_to() するほうが楽だと思うんがねえ</li>
</ul>
</li>
<li>自動サマリー、タグ、アーカイブ、ペジネーションなどをまとめるとごちゃごちゃするので別にするか<ul>
<li>タグ、アーカイブは、v4 だと collection 機能でサクッとできるっぽいし</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;middleman-ベースで作りたいと思ってること&quot;&gt;&lt;a href=&quot;#middleman-ベースで作りたいと思ってること&quot; class=&quot;headerlink&quot; title=&quot;middleman ベースで作りたいと思ってること&quot;&gt;&lt;/a&gt;middleman ベ
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>middleman-akcms 文書管理拡張機能のご紹介</title>
    <link href="http://atarukodaka.github.io/hexo/software/middleman/middleman-akcms.html"/>
    <id>http://atarukodaka.github.io/hexo/software/middleman/middleman-akcms.html</id>
    <published>2017-01-26T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>middleman のディレクトリごとのサマリーを自動生成する文書管理システムを拡張機能として作ってみました。</p>
<p><a href="https://github.com/atarukodaka/middleman-akcms" target="_blank" rel="external">akcms - Ataru Kodaka Content Management System - atarukodaka/middleman-akcms</a></p>
<p>動作サンプルはこちら：<a href="http://atarukodaka.github.io/">Home - Ataru Kodaka Site</a></p>
<p>スナップショット：</p>
<div><br><a href="/images/middleman-akcms-snapshot.png"><img src="/images/middleman-akcms-snapshot.png" alt="スナップショット" style="max-width: 70%"></a><br></div>

<p>foo/bar/baz.html を作成すると、foo/bar/index.html, foo/index.html, index.html といったディレクトリサマリーページを自動生成します。これにより、どのリソースからも parent, children でたどることができるようになります。</p>
<p>その他、月別アーカイブ、タグ、ペジネーション、breadcrumbなどをサポートします。<br>付属テンプレートでは bootstrap3をサポートします。</p>
<h2 id="インストールと使いかた"><a href="#インストールと使いかた" class="headerlink" title="インストールと使いかた"></a>インストールと使いかた</h2><p>middleman4 を入れた状態で、テンプレートを指定してプロジェクトを作ります</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ middleman init proj --template git@github.com:atarukodaka/middleman-akcms.git</div></pre></td></tr></table></figure>
<p>後は通常どおりにprojに入って bundle install し、source/ 以下お好きなようにファイルを作って中身を書き build や server 回します。</p>
<h3 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h3><h4 id="config-rb"><a href="#config-rb" class="headerlink" title="config.rb"></a>config.rb</h4><p>config.rb にて :akcms を activate し、各種設定をします。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">activate <span class="symbol">:akcms</span> <span class="keyword">do</span> <span class="params">|akcms|</span></div><div class="line">  akcms.layout = <span class="string">"article"</span></div><div class="line"></div><div class="line">  akcms.directory_summary_template = <span class="string">"templates/directory_summary_template.html"</span></div><div class="line">  akcms.archive_month_template = <span class="string">"templates/archive_template.html"</span></div><div class="line">  akcms.tag_template = <span class="string">"templates/tag_template.html"</span></div><div class="line">  akcms.pagination_per_page = <span class="number">10</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>使うレイアウトやテンプレート群を指定してください。<br>ペジネーションのデフォルト表示数/頁も指定できますが、<br>記事ごとに指定することもできます（後述）。</p>
<h2 id="設計と機能"><a href="#設計と機能" class="headerlink" title="設計と機能"></a>設計と機能</h2><h3 id="記事-Article"><a href="#記事-Article" class="headerlink" title="記事 / Article"></a>記事 / Article</h3><p>以下の特徴を持ったリソースは、記事 (article) とみなされ：</p>
<ul>
<li>ignored でないもの</li>
<li>拡張子が .html あるいは .htm のもの</li>
<li>type: フロントマターで ‘article’ 以外のものが明示的に指定されていないもの</li>
</ul>
<p>以下のメソッドを持ちます：</p>
<ul>
<li>title：記事タイトル</li>
<li>date：日付(TimeWithZoneクラス）。date: フロントマターあるいは更新日時から生成</li>
<li>summary：サマリー表示</li>
<li>published?：出力するか。published: false でなければ真</li>
<li>prev_article：次の記事</li>
<li>next_article：前の記事</li>
<li>body：記事本文（レイアウト不使用）</li>
</ul>
<p>そして、Middleman::Sitemap::Store クラス(sitemapオブジェクトが生成される）には、以下のインスタンスメソッドが追加されます。</p>
<ul>
<li>articles()：全ての article リソース配列（日付逆順ソート済）</li>
</ul>
<p>これを使って、</p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> sitemap.articles.first(<span class="number">10</span>).each <span class="keyword">do</span> <span class="params">|article|</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> link_to(article.title, article) </span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> <span class="keyword">end</span></span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>などと最新１０件の記事を表示することができます。</p>
<p>また、全てのリソースに、以下のメソッドが追加されます：</p>
<ul>
<li>is_article?：article かどうか</li>
<li>to_article!：当該リソースを article 属性を持たせる</li>
</ul>
<p>see <a href="https://github.com/atarukodaka/middleman-akcms/blob/master/lib/middleman-akcms/article.rb" target="_blank" rel="external">https://github.com/atarukodaka/middleman-akcms/blob/master/lib/middleman-akcms/article.rb</a></p>
<h3 id="ディレクトリサマリー-DirectorySummary"><a href="#ディレクトリサマリー-DirectorySummary" class="headerlink" title="ディレクトリサマリー / DirectorySummary"></a>ディレクトリサマリー / DirectorySummary</h3><p>activate の際、テンプレートを指定するとディレクトリサマリー生成機能が稼働します。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">activate <span class="symbol">:akcms</span> <span class="keyword">do</span> <span class="params">|conf|</span></div><div class="line">  conf.directory_summary_template = <span class="string">"templates/directory_summary.html"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>これにより、例えば foo/bar/baz.html というリソースがあった場合、</p>
<ul>
<li>foo/bar/index.html</li>
<li>foo/index.html</li>
<li>index.html</li>
</ul>
<p>が（存在しなければ）テンプレートに従いプロキシリソースが生成されます。<br>その際、ローカル変数として、</p>
<ul>
<li>directory:  当該ディレクトリの情報を保持するname, path メソッドを持つオブジェクト</li>
<li>articles[]：当該ディレクトリ下にある article のリソース配列</li>
</ul>
<p>が渡されるため、</p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="xml">% cat templates/directory_summary.html.erb</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Directory: <span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> directory.name </span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> articles.each <span class="keyword">do</span> <span class="params">|article|</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> link_to(article.title, article) </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> <span class="keyword">end</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>などと当該ディレクトリの記事一覧を作成できます。</p>
<h4 id="breadcrump"><a href="#breadcrump" class="headerlink" title="breadcrump"></a>breadcrump</h4><p>全てのリソースに、ancestors メソッドが追加されるため、以下のように<br>breadcrumbs を手軽に作ることができます。</p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> current_resource.ancestors.reverse.map <span class="keyword">do</span> <span class="params">|res|</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> link_to(res.data.title <span class="params">||</span> res.directory.name, res) </span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span></span><span class="ruby"> <span class="keyword">end</span> </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>current_resource.data.title<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="foo-config-yml"><a href="#foo-config-yml" class="headerlink" title="foo/config.yml"></a>foo/config.yml</h4><p>あるディレクトリに “directory_name: “というエントリを持つ config.yml が存在する場合、<br>resource.directory.name はその値が入ります。</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat source/foo/config.yml</div><div class="line"><span class="attr">directory_name:</span> フー</div></pre></td></tr></table></figure>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="xml">$ cat source/foo/index.html.erb</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>directory: <span class="tag">&lt;<span class="name">%=</span></span><span class="ruby"> current_resource.directory.name </span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span> <span class="comment">&lt;!-- 'フー' と表示される --&gt;</span></span></div></pre></td></tr></table></figure>
<h3 id="タグ"><a href="#タグ" class="headerlink" title="タグ"></a>タグ</h3><p>options.tag_template</p>
<ul>
<li>resource.tags: 当該リソースのタグ配列</li>
<li>sitemap.tags：タグ=&gt;プロキシリソースのハッシュ</li>
</ul>
<h3 id="アーカイブ"><a href="#アーカイブ" class="headerlink" title="アーカイブ"></a>アーカイブ</h3><p>options.archive_month_template</p>
<ul>
<li>sitemap.archives：日付(TimeWithZone)=&gt;プロキシリソースのハッシュ</li>
</ul>
<h3 id="ペジネーション"><a href="#ペジネーション" class="headerlink" title="ペジネーション"></a>ペジネーション</h3><ul>
<li>pagination?：ヘルパ関数</li>
<li>current_resource.paginator：<ul>
<li>page_number</li>
<li>num_pages</li>
<li>…</li>
</ul>
</li>
</ul>
<h3 id="シリーズ機能"><a href="#シリーズ機能" class="headerlink" title="シリーズ機能"></a>シリーズ機能</h3><p>options.series_title_template</p>
<p>config.yml</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">series:</span> シリーズ名</div></pre></td></tr></table></figure>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h3 id="emacs"><a href="#emacs" class="headerlink" title=".emacs"></a>.emacs</h3><p>.emacs や .emacs.d/init.el に</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">(require &apos;autoinsert)</div><div class="line">(add-hook &apos;find-file-hooks &apos;auto-insert)</div><div class="line">(setq auto-insert-query nil)</div><div class="line">(setq auto-insert-alist </div><div class="line">      &apos;((&quot;\\.html\\.md$&quot; . frontmatter-skeleton)</div><div class="line">	  (&quot;\\.html\\.md\\.erb$&quot; . frontmatter-skeleton)))</div><div class="line"></div><div class="line">;; middleman-blog: article-front matter</div><div class="line">(defun insert-article-frontmatter ()</div><div class="line">  (interactive)</div><div class="line">  (insert (concat &quot;---\ntitle: \ndate: &quot; (format-time-string &quot;%Y-%m-%d&quot;) &quot;\n\n---\n&quot;)))</div><div class="line">(define-key global-map &quot;\C-ca&quot; &apos;insert-article-frontmatter)</div></pre></td></tr></table></figure>
<p>とやっておくと便利です。</p>
<h4 id="data-config-yml"><a href="#data-config-yml" class="headerlink" title="data/config.yml"></a>data/config.yml</h4><p>著者名や著者・サイト情報をYAMLで記述します。テンプレートで data.config.author などと取れます。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;middleman のディレクトリごとのサマリーを自動生成する文書管理システムを拡張機能として作ってみました。&lt;/p&gt;
&lt;p&gt;&lt;a href
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>スケートを始める話</title>
    <link href="http://atarukodaka.github.io/hexo/figureskating/practise/howtostart.html"/>
    <id>http://atarukodaka.github.io/hexo/figureskating/practise/howtostart.html</id>
    <published>2017-01-10T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.098Z</updated>
    
    <content type="html"><![CDATA[<h2 id="始めてみる編"><a href="#始めてみる編" class="headerlink" title="始めてみる編"></a>始めてみる編</h2><h3 id="スケートを始めるには？"><a href="#スケートを始めるには？" class="headerlink" title="スケートを始めるには？"></a>スケートを始めるには？</h3><p>お近くのリンクのスケート教室に申し込むのが一番です。独学だと変な癖がつくし危険なので、最初は基礎を習った方がよいです。</p>
<h3 id="教室が満員でなかなか入れない"><a href="#教室が満員でなかなか入れない" class="headerlink" title="教室が満員でなかなか入れない"></a>教室が満員でなかなか入れない</h3><p>リンクや時期によってはウェイティングリストが長くなることもあるようです。<br>…</p>
<h3 id="リンクはどこにある？"><a href="#リンクはどこにある？" class="headerlink" title="リンクはどこにある？"></a>リンクはどこにある？</h3><p>首都圏だと、フルシーズンで神宮、高田馬場シチズン、東伏見、東大和、上尾、銀河など。<br>冬季のみは赤坂サカス、六本木、など。いずれもリンクは小さいです。</p>
<h3 id="服装は？"><a href="#服装は？" class="headerlink" title="服装は？"></a>服装は？</h3><p>塗れても大丈夫な動きやすいもの。上はTシャツにパーカーなどを羽織り、下はダボダボしてないジャージのパンツなど。スエットだと濡れが残るしダボつくので避けた方が吉。下にヒートテック的な股引をはくとよいですね。</p>
<p>そのうち専用のスケートパンツやスカートを用意しましょう。リンク付属の専門店やアイススペースなどで売ってます。</p>
<p>手袋は必須。リンクで売ってます。</p>
<h3 id="靴は買った方がよい？"><a href="#靴は買った方がよい？" class="headerlink" title="靴は買った方がよい？"></a>靴は買った方がよい？</h3><p>コーチと要相談ですが、教室に何回か通った後、続けられそうであれば早めに揃えた方がいいでしょう。貸し靴はエッジも甘いしブーツもよれてるので滑りにくく、余計にうまく滑れません。</p>
<h3 id="どの靴がいい？"><a href="#どの靴がいい？" class="headerlink" title="どの靴がいい？"></a>どの靴がいい？</h3><p>これもコーチと相談ですが、ブーツは小杉やオオタ、マルジュウなどの国産革製のほうが足になじんでよいです。軽いプラスチックのものは耐久性に欠けるし馴染みにくいので避けたほうがよいかと。トリプルを飛ぶのに軽さを求め、頻繁に靴を変える選手ならともかく、大人スケーターは多少重くとも革製が無難です。</p>
<p>ブレードはコロネーションエース一択でしょう。シールやパターンはまだ先です。入門用のセット靴はお勧めしません。</p>
<h2 id="滑ってみる"><a href="#滑ってみる" class="headerlink" title="滑ってみる"></a>滑ってみる</h2><h3 id="とりあえずどうすればいいの？"><a href="#とりあえずどうすればいいの？" class="headerlink" title="とりあえずどうすればいいの？"></a>とりあえずどうすればいいの？</h3><p>…</p>
<ul>
<li>ペンギンツー</li>
<li>ひょうたん</li>
<li>交互に</li>
</ul>
<h3 id="転ぶのが怖いんだけど、、"><a href="#転ぶのが怖いんだけど、、" class="headerlink" title="転ぶのが怖いんだけど、、"></a>転ぶのが怖いんだけど、、</h3><p>転ぶときは転ぶので、安全な転び方を会得しましょう。</p>
<p>あ、ヤバい、とバランスを崩したら、体を捻って体を丸めつつ横に倒れましょう。頭を打つのが一番怖いです。</p>
<p>手で支えようとしないこと。下手に手を出すとポキッと折れます。</p>
<h3 id="立ち上がれない、、"><a href="#立ち上がれない、、" class="headerlink" title="立ち上がれない、、"></a>立ち上がれない、、</h3><p>四つんばになります。片膝をついて、近くに人がいればそれに掴まりつつ、もう片方の足を出して立ち上がります。慣れれば大したことありません。</p>
<p>人とぶつかりそうで怖い<br>小さい子供やヨタヨタしてるレジャー客からは距離を取りましょう。周りの人がどっちに滑ろうとしてるのかを見つつ、突然その人が転んでも避けられる距離とスピードで滑ること。</p>
<p>うまい選手は勝手に避けてくれますが、脇をスピードを出してすり抜けられるのは怖いので、あまりに危ない時はスタッフに言って注意してもらいましょう。ホッケー少年が鬼ごっこしてるときがあります。</p>
<h3 id="ひょうたんがうまくできない"><a href="#ひょうたんがうまくできない" class="headerlink" title="ひょうたんがうまくできない"></a>ひょうたんがうまくできない</h3><p>基本ながら、結構難しいです。特に開いた後閉じるのが。</p>
<p>逆ハの字にすれば勝手に足が開いて進んでくのですが、すぐ止まっちゃうか、そのままマタサキになってしまいがち。</p>
<p>開いて進んだら、かかと側を押し出すようにブレードの少し後ろ目に乗ってあげると、足がハの字になって閉じてくれます。基本的にフォアでは少し後ろに乗ります。</p>
<h3 id="片足滑走なかなかできない"><a href="#片足滑走なかなかできない" class="headerlink" title="片足滑走なかなかできない"></a>片足滑走なかなかできない</h3><p>まず両足ひょうたんをしっかり深くやります。外側の足でしっかり押します。徐々に内側の足を浮かし外側の足だけで滑ります。それがフォアインの片足滑走です。</p>
<p>同様に内側の足で押し、外側を浮かせればフォアアウトです。</p>
<p>フォアアウトでしっかりインを押し片足で長く滑りチェックの姿勢を取ればストロークになります。</p>
<h2 id="滑ってみる続編"><a href="#滑ってみる続編" class="headerlink" title="滑ってみる続編"></a>滑ってみる続編</h2><h3 id="サポーターつける？"><a href="#サポーターつける？" class="headerlink" title="サポーターつける？"></a>サポーターつける？</h3><h3 id="クロスがうまく出来ない"><a href="#クロスがうまく出来ない" class="headerlink" title="クロスがうまく出来ない"></a>クロスがうまく出来ない</h3><p>まずシャッセをやりましょう。<br>…</p>
<h3 id="ターンで腰が回ってしまう"><a href="#ターンで腰が回ってしまう" class="headerlink" title="ターンで腰が回ってしまう"></a>ターンで腰が回ってしまう</h3><p>…</p>
<h2 id="オフアイス編"><a href="#オフアイス編" class="headerlink" title="オフアイス編"></a>オフアイス編</h2><h3 id="筋トレは必要？"><a href="#筋トレは必要？" class="headerlink" title="筋トレは必要？"></a>筋トレは必要？</h3><p>最初のうちは、軽い運動が問題なくできる程度の体力と筋力があれば問題ないので、無理にする必要はないです。スケートで必要となる内股の筋肉はつけにくいので、多く滑って自然につける、と捉えた方がよいかと。あと背筋も使います。</p>
<p>スケートのためというより、継続的に体操やウォーキングをやるのはもちろんいいですね。</p>
<p>二分のプログラムをスピードを落とさず滑りきりたいとか高いジャンプを飛びたいとかなってくると、股上げやダッシュなどで体力筋力をつけるのもありですが。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;始めてみる編&quot;&gt;&lt;a href=&quot;#始めてみる編&quot; class=&quot;headerlink&quot; title=&quot;始めてみる編&quot;&gt;&lt;/a&gt;始めてみる編&lt;/h2&gt;&lt;h3 id=&quot;スケートを始めるには？&quot;&gt;&lt;a href=&quot;#スケートを始めるには？&quot; class=&quot;header
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>3群ランカー</title>
    <link href="http://atarukodaka.github.io/hexo/game/kancolle/kancolle-ranker.html"/>
    <id>http://atarukodaka.github.io/hexo/game/kancolle/kancolle-ranker.html</id>
    <published>2016-09-21T15:00:00.000Z</published>
    <updated>2017-02-27T06:05:57.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="必要戦果"><a href="#必要戦果" class="headerlink" title="必要戦果"></a>必要戦果</h2><p>E0全部割って(+705)、5-4を毎日15周して(+900)、適宜オリョクル・北方・東方クエなどをこなせば<br>およそ 1,700 ぐらいになるので、これくらいあれば500位には足りるかと。</p>
<h2 id="5-4周回"><a href="#5-4周回" class="headerlink" title="5-4周回"></a>5-4周回</h2><p>下記二種類をローテーションさせて疲労抜きさせる。</p>
<h3 id="中央ルート-：潜水艦"><a href="#中央ルート-：潜水艦" class="headerlink" title="中央ルート ：潜水艦"></a>中央ルート ：潜水艦</h3><p>安い、速いで効率が高い。HPの低いろーちゃんを旗艦にして、まるゆにダメコンを積ませる。<br>まるゆがボス前で大破することがそこそこあるが、ダメコン積んで進んでも、まず使われることはない。<br>まるゆを入れておくと被弾しても修理が速いため効率があがる。撃破率は若干落ちるが、さほど問題ではない。<br>ボスでは夜戦までやらないとC敗北することがある。</p>
<p>オール単縦。</p>
<h3 id="北ルート：高速・ドラム４"><a href="#北ルート：高速・ドラム４" class="headerlink" title="北ルート：高速・ドラム４"></a>北ルート：高速・ドラム４</h3><p>高速戦艦１、空母２、重巡１は固定で。戦艦は連撃装備に徹甲弾、制空は360程度。</p>
<p>ドラム缶を積める駆逐艦を育成する場合は、駆逐艦（ドラム缶３）を旗艦にし航巡（＋ドラム缶１）を加える。<br>積めない重巡などを育成する場合は、通常装備でそれを旗艦にし、航巡（ドラム缶４）を加える。</p>
<ul>
<li>駆逐艦（ドラム缶３） or 他種艦（連撃装備）</li>
<li>戦艦（連撃装備、徹甲弾）</li>
<li>航巡（ドラム缶１）or 航巡（ドラム缶４）</li>
<li>重巡（連撃装備）</li>
<li>空母 x 2 （制空360程度）</li>
</ul>
<p>オール単縦。２戦目は複縦でもいいが、単縦でぶちのめしたほうが結局被弾も少ない。</p>
<ul>
<li>未改造駆逐艦だとさすがに大破することが多いので、演習などで改造レベルに達してからのほうがよい。</li>
<li>ボス戦では無理にS勝利狙いで夜戦をする必要はないが、残りが輸送艦のみで補給艦クエが残ってる場合などは行ってもよい。</li>
<li>航巡はそれぞれ２隻ずつ用意し、数隻をドラム缶４搭載、それ以外を連撃装備＋ドラム缶１にしてローテーションさせるとよい。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;必要戦果&quot;&gt;&lt;a href=&quot;#必要戦果&quot; class=&quot;headerlink&quot; title=&quot;必要戦果&quot;&gt;&lt;/a&gt;必要戦果&lt;/h2&gt;&lt;p&gt;E0全部割って(+705)、5-4を毎日15周して(+900)、適宜オリョクル・北方・東方クエなどをこなせば&lt;br&gt;およそ 
    
    </summary>
    
      <category term="ゲーム" scheme="http://atarukodaka.github.io/hexo/categories/%E3%82%B2%E3%83%BC%E3%83%A0/"/>
    
      <category term="艦これ" scheme="http://atarukodaka.github.io/hexo/categories/%E3%82%B2%E3%83%BC%E3%83%A0/%E8%89%A6%E3%81%93%E3%82%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>艦これ検証部問題メモ</title>
    <link href="http://atarukodaka.github.io/hexo/game/kancolle/kancolle_kensho.html"/>
    <id>http://atarukodaka.github.io/hexo/game/kancolle/kancolle_kensho.html</id>
    <published>2016-06-27T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p><a href="http://ja.kancollekensho.wikia.com/wiki/%E8%89%A6%E3%81%93%E3%82%8C%E6%A4%9C%E8%A8%BC%E9%83%A8%E3%81%BE%E3%81%A8%E3%82%81_Wikia" target="_blank" rel="external">艦これ検証部まとめ Wikia - Wikia</a><br>をどうぞ。</p>
<h2 id="主要人物"><a href="#主要人物" class="headerlink" title="主要人物"></a>主要人物</h2><ul>
<li>検証部<ul>
<li>在籍<ul>
<li>のいじ</li>
<li>南条</li>
</ul>
</li>
<li>脱退<ul>
<li>びいかめ</li>
<li>CC</li>
<li>オリカル</li>
</ul>
</li>
</ul>
</li>
<li>批判者<ul>
<li>監察部</li>
<li>たのごろう</li>
<li>ktgohan（卵のひと）</li>
</ul>
</li>
</ul>
<h2 id="音声ファイル"><a href="#音声ファイル" class="headerlink" title="音声ファイル"></a>音声ファイル</h2><ul>
<li>書き起こし001: <a href="https://docs.google.com/document/d/1exavzHqOTU1NJ8wZosVQ6A3pxphXl7ZytSGsLgoN2ns/edit" target="_blank" rel="external">https://docs.google.com/document/d/1exavzHqOTU1NJ8wZosVQ6A3pxphXl7ZytSGsLgoN2ns/edit</a></li>
<li>書き起こし002: 消えた</li>
</ul>
<h2 id="南条氏謝罪"><a href="#南条氏謝罪" class="headerlink" title="南条氏謝罪"></a>南条氏謝罪</h2><p>6/26/2016づけ「お詫び」文書：<a href="http://www.asahi-net.or.jp/~JR7K-SGMT/owabi.pdf" target="_blank" rel="external">http://www.asahi-net.or.jp/~JR7K-SGMT/owabi.pdf</a></p>
<ul>
<li>検証部部員への「オフレコ暴露話」はすべて虚言</li>
<li>「のいじ氏にtwitter垢を任せていた」のも嘘</li>
</ul>
<h2 id="検証DB仕様"><a href="#検証DB仕様" class="headerlink" title="検証DB仕様"></a>検証DB仕様</h2><ul>
<li>RDBM などは使っておらず json 形式のテキストデータを保持</li>
<li>「人数」は UUID 数、つまり接続セッション数のこと。６月末時点で実人数は500人程度</li>
<li>分析時はローカルのPCにダウンロードして行う<ul>
<li>その「ダウンロードツール」はID, パスワードが埋め込まれており、それを入手すれば誰でもデーターをダウンロード可能。</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://ja.kancollekensho.wikia.com/wiki/%E8%89%A6%E3%81%93%E3
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>提督の決断４tips</title>
    <link href="http://atarukodaka.github.io/hexo/game/teitokuno-ketsudan4.html"/>
    <id>http://atarukodaka.github.io/hexo/game/teitokuno-ketsudan4.html</id>
    <published>2016-06-21T15:00:00.000Z</published>
    <updated>2017-02-27T06:05:09.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本戦術"><a href="#基本戦術" class="headerlink" title="基本戦術"></a>基本戦術</h2><p>潜水艦の魚雷攻撃での漸減の上、航空機でアウトレンジで潰す、これが至高。</p>
<p>敵が集結してる拠点に真正面から殴りかかってもこちらの被害が甚大になるので、<br>まず潜水艦16隻の部隊で侵攻し、空母や戦艦などの大物を潰す。<br>敵が怪我が直らないうちに空母機動部隊x2と戦艦重巡護衛部隊で乗り込む。</p>
<p>なので必要なのは、</p>
<ul>
<li>足が充分あり基数の多い魚雷を持った潜水艦</li>
<li>航続距離の長い偵察機と艦戦・艦爆</li>
</ul>
<p>を速やかに設計、製造すること。</p>
<h2 id="設計"><a href="#設計" class="headerlink" title="設計"></a>設計</h2><h3 id="航空機"><a href="#航空機" class="headerlink" title="航空機"></a>航空機</h3><ul>
<li>水上偵察機：ベース機体は Re2001。索敵は4,000km程度。装甲は50。機銃は必ず7.5m を1門はつけておくこと。レーダーは開発されてれば必ず装備。</li>
<li>艦上戦闘機：Re2001 / 3,400m / 50。20mm 機銃を２門、レーダーは不要。</li>
<li>艦上爆撃機：Re2001 / 3,400m / 65。7.5mm x 1、レーダーは不要。</li>
<li>艦上雷撃機：不要</li>
<li>艦上偵察機：ある程度余裕が出てきてから、かつレーダーが開発されてきたらでよい。それまでは随伴の搭載機か艦爆で代用。</li>
<li>陸上航空機：不要</li>
</ul>
<p>Re2001は若干効果だが強い機体。雷撃機は命中が低いし飛行場破壊で効果が薄いので基本作らない。<br>陸上機はまったく不要。初期配備のものを前線基地においてもよいが、アルミに戻してしまったほうが効率がよい。</p>
<h3 id="艦船"><a href="#艦船" class="headerlink" title="艦船"></a>艦船</h3><ul>
<li>潜水艦：必ず作る。2連装x4基以上。速度は最大に。耐久は余ったのを振り分ける。２週間で設計完了するので新しい機関が開発される度設計しなおす。</li>
<li>空母：鉄鋼やアルミが足りない場合は、まず80機程度のを。ある程度見込みがたてば150機搭載のをなるべく早めに。</li>
<li>戦艦：被害担当艦。敵航空隊に真っ先に狙われるので、</li>
<li>重巡<ul>
<li>汎用：既存のでそれなりのがあればそれを使えばよい。技術が上がってくれば砲や耐久を増やしたものを設計する</li>
<li>対空：空母護衛用。汎用のを流用しても構わないが、対空砲や機銃を増やした防空艦を空母につけてあげると安心感が増す</li>
</ul>
</li>
<li>軽巡：ほぼ不要</li>
<li>駆逐艦：空母の護衛や戦艦に付随する的よけ数合わせが主。特に水雷戦をしかけるつもりがなければありものでよい。新規に設計するときはスピードと魚雷重視で。</li>
</ul>
<h2 id="技術開発"><a href="#技術開発" class="headerlink" title="技術開発"></a>技術開発</h2><ul>
<li>工業力：資金収入に直結するので、再優先であげる</li>
<li>電子・通信：レーダーがまず必要なので序盤は優先</li>
<li>機関・鋼材：エンジン開発に必要</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本戦術&quot;&gt;&lt;a href=&quot;#基本戦術&quot; class=&quot;headerlink&quot; title=&quot;基本戦術&quot;&gt;&lt;/a&gt;基本戦術&lt;/h2&gt;&lt;p&gt;潜水艦の魚雷攻撃での漸減の上、航空機でアウトレンジで潰す、これが至高。&lt;/p&gt;
&lt;p&gt;敵が集結してる拠点に真正面から殴りかか
    
    </summary>
    
      <category term="ゲーム" scheme="http://atarukodaka.github.io/hexo/categories/%E3%82%B2%E3%83%BC%E3%83%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>ジャズセッションに参加する</title>
    <link href="http://atarukodaka.github.io/hexo/hobby/jazz-session.html"/>
    <id>http://atarukodaka.github.io/hexo/hobby/jazz-session.html</id>
    <published>2016-03-24T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.163Z</updated>
    
    <content type="html"><![CDATA[<p>セッションには決まり事があります。</p>
<ul>
<li>まず１コーラス、サックスかギターがメインテーマを吹く（弾く）</li>
<li>ソロはサックス→ギター→ピアノ→ベースの順に１コーラスずつ</li>
<li>４バースあるいは８バースといって、４（か８）小節サックスソロ→４小節ドラムソロ→４小節ギターソロ→４小節ドラムソロ。。。。を繰り返します。</li>
<li>最後は曲の頭に戻ってサックスがメインテーマを吹いて終了</li>
</ul>
<ul>
<li>ロスト</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;セッションには決まり事があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;まず１コーラス、サックスかギターがメインテーマを吹く（弾く）&lt;/li&gt;
&lt;li&gt;ソロはサックス→ギター→ピアノ→ベースの順に１コーラスずつ&lt;/li&gt;
&lt;li&gt;４バースあるいは８バースといって、４（か８）小節サック
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MediaMonkey で聴く</title>
    <link href="http://atarukodaka.github.io/hexo/hobby/mediamonkey.html"/>
    <id>http://atarukodaka.github.io/hexo/hobby/mediamonkey.html</id>
    <published>2016-03-15T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.166Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><a href="http://kotonohanoana.com/archives/75" target="_blank" rel="external">【音源管理の精髄】　目次　【ネットワークオーディオTips】 | 言の葉の穴</a></li>
<li><a href="http://matome.naver.jp/odai/2137034628574146101" target="_blank" rel="external">【iTune不要】iPhoneもAndroidも音楽管理をMediaMonkeyに任せたら便利すぎた - NAVER まとめ</a></li>
<li><a href="http://eco-memo.blogspot.jp/2010/10/mediamonkeyandroid.html" target="_blank" rel="external">MediaMonkeyを使ってPCとAndroidの音楽を同期させる(m3u・オートプレイリスト・PlayQ対応) [Win][Ar] ＠試行錯誤的知的生活blog</a></li>
</ul>
<h2 id="曲の取り込み"><a href="#曲の取り込み" class="headerlink" title="曲の取り込み"></a>曲の取り込み</h2><h3 id="CDリッピング"><a href="#CDリッピング" class="headerlink" title="CDリッピング"></a>CDリッピング</h3><h2 id="タグ付け"><a href="#タグ付け" class="headerlink" title="タグ付け"></a>タグ付け</h2><h3 id="ルール"><a href="#ルール" class="headerlink" title="ルール"></a>ルール</h3><ul>
<li>クラシック：作曲家→種類（交響曲、オペラなど）→指揮者、演奏者→アルバム→トラック</li>
<li>ポップなど：ジャンル（ポップス、ジャズなど）→アーティスト→アルバム→トラック</li>
</ul>
<p>「アルバムアーティスト」に種類</p>
<h2 id="スマフォへの同期"><a href="#スマフォへの同期" class="headerlink" title="スマフォへの同期"></a>スマフォへの同期</h2><ul>
<li>同期しないタイトルはcustom タグに “_2” などとつける。</li>
<li>ファイル体系化で “C:\Users\yourname\Music\MM$if(<custom 1="">,<custom 1="">)\&lt;ジャンル&gt;\&lt;アルバム アーティスト&gt;\&lt;トラック #:2&gt; &lt;アーティスト&gt; - &lt;タイトル&gt;”などとする</custom></custom></li>
<li>スマフォをUSBで繋いでツリーでクリック：右ペインの「自動同期（→Device）」：同期するファイルを選択：場所で C:\Users\yourname\Music\MM を選択</li>
<li>「自動同期」ボタンを押すと同期</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kotonohanoana.com/archives/75&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【音源管理の精髄】　目次　【ネットワークオーディオTips】 | 言の葉の穴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ネットワークオーディオ</title>
    <link href="http://atarukodaka.github.io/hexo/hobby/network-audio.html"/>
    <id>http://atarukodaka.github.io/hexo/hobby/network-audio.html</id>
    <published>2016-03-05T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.167Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><a href="http://www.mediamonkey.com/" target="_blank" rel="external">MediaMonkey » Free Media Jukebox, Music Manager, CD Ripper &amp; Converter</a></li>
<li><a href="http://kotonohanoana.com/archives/257" target="_blank" rel="external">【アプリ紹介】Kinsky IPad版 | 言の葉の穴</a></li>
<li><a href="http://kotonohanoana.com/archives/2872" target="_blank" rel="external">【ネットワークオーディオTips・実践編】　PCをサーバーとして使う/foobar2000 UPnP Server | 言の葉の穴</a></li>
<li><a href="http://kotonohanoana.com/archives/7825" target="_blank" rel="external">【ネットワークオーディオTips】foobar2000のコントロールアプリ 『foobarCon』 | 言の葉の穴</a></li>
</ul>
<p>ネットワークオーディオ。</p>
<ul>
<li>高い専用機器を買う必要はない。手持ちの機器でどうにかなる</li>
<li></li>
</ul>
<h2 id="MediaMonkey-で脱iTunes"><a href="#MediaMonkey-で脱iTunes" class="headerlink" title="MediaMonkey で脱iTunes"></a>MediaMonkey で脱iTunes</h2><h2 id="Kinsky-で"><a href="#Kinsky-で" class="headerlink" title="Kinsky で"></a>Kinsky で</h2><ul>
<li>ツール＞オプション＞プレイヤー：UPnP/DLNAによる MediaPlayer の入力／コントロールを許可をチェック</li>
</ul>
<p>asset upnp: ファイアーウォールの設定を変えないとダメ。コントロール パネル＞ネットワークとインターネット＞ネットワークと共有センター＞共有の詳細設定：ゲストまたはパブリック：ネットワーク探索を有効</p>
<p>android のコントローラだと軒並み音量調節ができない（ミュートは出来る）。<br>BubbleUPnP が一番良さ気。</p>
<p>##</p>
<ul>
<li>サーバー：Asset UPnP（PC）</li>
<li>プレイヤー：foobar2000（PC）</li>
<li>コントローラー：Bubble UPnP（スマフォ）</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mediamonkey.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MediaMonkey » Free Media Jukebox, Music Manager, CD Ripper &amp;am
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>フェザー両刃髭剃りを試す</title>
    <link href="http://atarukodaka.github.io/hexo/misc/feazer-higesori.html"/>
    <id>http://atarukodaka.github.io/hexo/misc/feazer-higesori.html</id>
    <published>2016-02-10T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.219Z</updated>
    
    <content type="html"><![CDATA[<p>いままで髭剃りはshick とかの五枚刃のやつ使ってたんですが、実家に置き忘れてきちゃったのと、ランニングコストがバカ高いので、昔ながらの両刃のやつにしてみました。 </p>
<p>いいですね、これ。「剃ってる」感がすごいある。ジョリっと。剃った後も床屋さんでやってもらったようにツルっとなる。それに安い。二枚付きホルダーが1,000円。替刃も10毎で500円。<br>但し一枚刃なんで丁寧にやんないと、流血する。もしくは刃がちゃんとあたらなくて剃れない。肌が弱い人だと充分事前に肌をむらさないと剃り負けする。shick とかのだとなんとなく沿わせれば逸れてたけど、角度と力加減を調節しないとうまく剃れない。急いでる朝だと危ないかも。 </p>
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=myhoney0079-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B014P7HZJM" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=myhoney0079-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B014P7HZI8" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=myhoney0079-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B015JBW41M" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=myhoney0079-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B000FP3KV6" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
    
    <summary type="html">
    
      &lt;p&gt;いままで髭剃りはshick とかの五枚刃のやつ使ってたんですが、実家に置き忘れてきちゃったのと、ランニングコストがバカ高いので、昔ながらの両刃のやつにしてみました。 &lt;/p&gt;
&lt;p&gt;いいですね、これ。「剃ってる」感がすごいある。ジョリっと。剃った後も床屋さんでやってもらった
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ガルパン大戦車道</title>
    <link href="http://atarukodaka.github.io/hexo/game/garupan-senshadou.html"/>
    <id>http://atarukodaka.github.io/hexo/game/garupan-senshadou.html</id>
    <published>2016-01-28T15:00:00.000Z</published>
    <updated>2017-02-27T06:04:40.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>ガルパンのキャラや戦車を集めて戦って育てていくくソシャゲー。</p>
<p>ガルパンアプリぽちぽちとやってるが、今のところ無課金でそこそこ楽しんでやってる。キャラの育成や強い戦車が充実していくうちはそこそこ楽しめると思う。ある程度揃ってきたら手間が面倒になってきて多分飽きる。 自分はミュートしてやってるが、キャラボイスとか好きな人はいいんじゃないかな。<br>戦闘は最初の内はオートで楽勝だけど、そのうちAI任せだと勝てなくなったり損害がひどいのでマニュアルでやるが、隘路で重戦車縦にして後ろで三突かヘッツァーでスコスコやってれば大体勝てる。たまに向こうもこもることがあるのでその時はまとまって進軍して各個撃破を。<br>難点はいろいろあるが、まず各所ロードが長い。編成変えたり乗員チェックする度に、編成（ロード）部隊編成（ロード）編成（ロード）生徒一覧（ロード）と待たされる。部隊編成と一覧はワンタップでしてもらいたい。<br>生徒一覧でソートできるのはいいが、ページ進んであるキャラを選択した後戻るとまた初めのページに戻るのは有り体に言ってクソ。<br>売ろうとして「搭乗中」と出てもどの部隊のどのチームだか表示されないので、わざわざ一旦編成画面に戻って部隊編成からそれぞれの部隊にいるかを目視で探していちいち外さないいけない。整理するキャラが複数で部隊も複数だとやってられない。<br>控えめにいって </p>
<p>編成（ロード）一覧（ロード）ソートで探す、売る、「搭乗中」、編成（ロード）部隊編成（ロード）各部隊を探す、いたら外す、編成（ロード）一覧（ロード）探す、売る、まだ「搭乗中」かよ！編成（ロード）以下略。<br>練度のシステムが分かりにくく、キャラごと各レアリティ、服装を入手し最大レベルまで育成したかを把握しないと売却していいのか判断できないため、自分で表を作って管理しておかないといけない。いちいち図鑑まで見るのは手間にあわない。<br>ドロップがほぼ不要なEクラスパーツとくまばかりで、すぐ枠を圧迫する。まだ経験値や資金のほうがまし。キャラドロップが悪いのは、、まあ運営上仕方ないのだろう。<br>どうしてもキャラガチャを回したくなるが、序盤は戦車ガチャで戦力を整えるべき。魂70とちとお高いが、最低CCCパーツでもEEEより各ステータスが400程度あがる。<br>同じだけキャラであげようとすると五人分必要（☆3Lv30は☆5Lv10より400程度あがる）なので一人魂30で150必要となり倍以上かかり、かつLv30まで上げるのに時間がかかり速効性にかける。<br>フレンドガチャで落ちる☆２でも覚せい剤させればそこそこ使えるので、初期☆３の西住殿とその犬でまかない、三突かヘッツァーのCCC以上を手に入れ主力がある程度揃いイベントも攻略できるようになってからでキャラガチャは構わない。<br>課金上等なら使っても構わないが、その分飽きが早くなる。☆５狙いなどは微課金では無意味。 </p>
<p>魂は、まず戦力ガチャ、修理枠を一つ増やし、人やパーツか増えてきたらそちらの枠も増やす。弾丸や高速修理には使わない。</p>
<h2 id="参考サイト"><a href="#参考サイト" class="headerlink" title="参考サイト"></a>参考サイト</h2><p><a href="http://garupan-app.gamerch.com/" target="_blank" rel="external">ガルパン攻略Wikiまとめ【ガールズ＆パンツァー戦車道大作戦！】 - Gamerch</a></p>
<ul>
<li><a href="https://game8.jp/games/454" target="_blank" rel="external">ガルパン攻略Wiki｜Game8（ゲームエイト）</a></li>
<li><a href="http://garupan-daisakusen.net/" target="_blank" rel="external">ガルパン無課金作戦室</a><ul>
<li><a href="http://garupan-daisakusen.net/category/beginner/" target="_blank" rel="external">ガルパン無課金作戦室：初心者向け講座</a></li>
</ul>
</li>
</ul>
<h2 id="序盤"><a href="#序盤" class="headerlink" title="序盤"></a>序盤</h2><ul>
<li>リセマラは特に必要なさそう。</li>
<li>キャラより戦車（パーツ）。キャラガチャはなるべく控えて、やるなら戦車ガチャ</li>
<li>フレンドガチャは適宜おこない乗員を増やす</li>
<li>練度の仕組みが分かりにくいが　<a href="http://garupan-daisakusen.net/%e6%9c%aa%e5%88%86%e9%a1%9e/134/" target="_blank" rel="external">「戦車道大作戦のややこしい練度システムについて解説します！」</a>を参照<ul>
<li>☆違い衣装違いでも最大レベルまであげる</li>
</ul>
</li>
<li>最初のうちはオート戦闘でもいいが、三凸が突っ込んでやられたりするのでちゃんとマニュアルで動かしたほうがいい。参考：<a href="http://game.boom-app.com/entry/garupan-daisakusen-play-02" target="_blank" rel="external">『ガールズ＆パンツァー 戦車道大作戦』- 戦車前進！試合における重要なポイントを把握しよう！【ガルパン攻略】 - Boom App Games</a></li>
<li>イベントのほうが経験値やドロップがいいのでそちらを</li>
</ul>
<h2 id="Lv30～"><a href="#Lv30～" class="headerlink" title="Lv30～"></a>Lv30～</h2><ul>
<li>戦闘</li>
<li>三凸やヘッツァーなどの超射程駆逐をマニュアル操作にして後方から支援射撃。他のはガンガンで</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;ガルパンのキャラや戦車を集めて戦って育てていくくソシャゲー。&lt;/p&gt;
&lt;p&gt;ガルパンアプリぽちぽちとやってるが、今のところ無課金でそこそこ楽
    
    </summary>
    
      <category term="ゲーム" scheme="http://atarukodaka.github.io/hexo/categories/%E3%82%B2%E3%83%BC%E3%83%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Egg!</title>
    <link href="http://atarukodaka.github.io/hexo/cooking/egg.html"/>
    <id>http://atarukodaka.github.io/hexo/cooking/egg.html</id>
    <published>2015-12-31T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.043Z</updated>
    
    <content type="html"><![CDATA[<p>i like egg !!!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;i like egg !!!&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ジャンプ・シークエンスと「シークエンス扱い」</title>
    <link href="http://atarukodaka.github.io/hexo/figureskating/jump-sequence.html"/>
    <id>http://atarukodaka.github.io/hexo/figureskating/jump-sequence.html</id>
    <published>2015-12-29T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.085Z</updated>
    
    <content type="html"><![CDATA[<p>ジャンプコンビネーションとシークエンスの定義：</p>
<p>ISU特別規則および技術規程（日本語参考訳）<br><a href="https://drive.google.com/file/d/0B1IaraI3y-o2dElXN2IwdXRfR28/view" target="_blank" rel="external">https://drive.google.com/file/d/0B1IaraI3y-o2dElXN2IwdXRfR28/view</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ジャンプ・コンビネーション</div><div class="line"></div><div class="line">ジャンプ・コンビネーションでは、ジャンプの着氷足が次のジャンプの踏み切り足となる。ジャンプとジャンプの間に氷上で完全に 1 回転した場合(フリー・フットは氷に触れてもよいが、体重移動がないこと)、その要素はジャンプ・コンビネーションの定義の枠内に入っている。複数のジャンプをリストに記載のないジャンプでつなぐ場合、その要素はジャンプ・シークェンスとコールされる。しかしハーフ・ループをコンビネーション/シークェンスで用いると、シングル・ループの価値を持つリスト記載ジャンプとみなされる。</div><div class="line"></div><div class="line">2 つのジャンプから成るジャンプ・コンビネーションの第 1 ジャンプを失敗し「リスト外ジャンプ」となった場合、それでもそのユニットはジャンプ・コンビネーションとみなされる。</div><div class="line"></div><div class="line">ジャンプ・シークェンス </div><div class="line"></div><div class="line">ジャンプ・シークェンスは、いかなる回転数のいかなるジャンプからの構成でもよく、ジャンプのリズム(膝)を保ちながら、ジャンプ同士をリスト外ジャンプおよび/またはホップで直接つなげてよい。シークェンス中にはターン/ステップ、クロスオーバー、またはストロークがないこと(ターンとは、スリー・ターン、ツイズル、ブラケット、ループ、カウンター、ロッカーである。ステップとは、トウ・ステップ、シャッセ、モホーク、チョクトー、エッジの変更を伴うカーブ、クロス・ロールである)。</div><div class="line"></div><div class="line">リスト記載ジャンプただ 1 つと他のリスト外ジャンプとで構成されるジャンプ・シークェンスは、ジャンプ・シークェンスとはみなされないが、ソロ・ジャンプとしてカウントされる。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">第 1 ジャンプ後に転倒またはステップ・アウトまたは体重移動を伴う）フリー・フットのタッチ・ダウン ＋別のジャンプ</div><div class="line"></div><div class="line">スケーターが第 1 ジャンプで転倒またはステップ・アウトし、ただちに続けて別のジャンプ</div><div class="line">を行った場合、その要素はジャンプ・コンビネーションのままとはならず以下のようにコー</div><div class="line">ルされる： ショート・プログラム：“第 1 ジャンプ＋コンボ”；続きの部分はテクニカル・パネ</div><div class="line">ルからは無視される。フリー・スケーティング：“第 1 ジャンプ＋シークェンス”（またはシ</div><div class="line">ークェンスの定義が満たされた場合に“第 1 ジャンプ＋第 2 ジャンプ＋シークェンス”）</div><div class="line">同じことが 3 つのジャンプを含むジャンプ・コンビネーションにも適用される。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ジャンプコンビネーションとシークエンスの定義：&lt;/p&gt;
&lt;p&gt;ISU特別規則および技術規程（日本語参考訳）&lt;br&gt;&lt;a href=&quot;https://drive.google.com/file/d/0B1IaraI3y-o2dElXN2IwdXRfR28/view&quot; targ
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>公式練習中の衝突・ニアミスに関して</title>
    <link href="http://atarukodaka.github.io/hexo/figureskating/collision-hanyu-daisu-2015-alljapan.html"/>
    <id>http://atarukodaka.github.io/hexo/figureskating/collision-hanyu-daisu-2015-alljapan.html</id>
    <published>2015-12-28T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.056Z</updated>
    
    <content type="html"><![CDATA[<h2 id="衝突事故の潜在的リスク"><a href="#衝突事故の潜在的リスク" class="headerlink" title="衝突事故の潜在的リスク"></a>衝突事故の潜在的リスク</h2><p>全日本選手権の公式練習中に羽生選手と村上選手が衝突したという報道がなされました。</p>
<p>まず最初に断っておきますが、複数人が同じリンクで滑走している以上、衝突事故は完全に防ぐことは難しく、どちらか一方のみに責任があるものではありません。滑走者すべてに注意義務があります。お互いがお互いを常に視認し、想定内の滑走をし、回避行動を取れるだけの距離を取っていれば防げますが、</p>
<ul>
<li>お互いを視認　→　目は前方にしかついておらず死角が存在する</li>
<li>想定内の滑走　→　急静止や転倒、レアな方向への転換など、完全にすべてのケースを想定することはできない</li>
<li>回避制動距離　→　リンクの広さと滑走コースは限られており、距離を保ち続けることは出来ない</li>
</ul>
<p>ことより、衝突、、まではいかなくともニアミスは結構な頻度で発生します。</p>
<h2 id="今回のケースに関して"><a href="#今回のケースに関して" class="headerlink" title="今回のケースに関して"></a>今回のケースに関して</h2><p>映像はこちら：（</p>
<video poster="https://pbs.twimg.com/tweet_video_thumb/CXOPUwRUEAAepRS.png" loop src="https://pbs.twimg.com/tweet_video/CXOPUwRUEAAepRS.mp4" style="width: 500px;" controls><br>   <source type="video/mp4" src="https://pbs.twimg.com/tweet_video/CXOPUwRUEAAepRS.mp4"><br></video>

<p>以下 twitter 投稿の再編集）</p>
<p>まず、スリーステップからチェックいれてRfo(CW)に出ようとしたところでの出会い頭ですね。完全に死角です（<strong>視認不能</strong>）。壁際でのフォアcw折り返しはあまりないし、突然に近い転換なので(<strong>想定外動作</strong>)、壁沿いで流してた風なダイスとしては、え？ちょ？こっち来るの？って感じで避けきれなかった感じ（<strong>回避距離不足</strong>）。壁沿いには人がいることが多いので確認してから切り返さないと危険ですね。</p>
<p>貸し切り中は、お互いが気をつけるのがまず大原則。曲かけ中はその人優先で、それ以外の人は曲かけの人に注意して邪魔しないこと。とはいえ曲かけの人も人がいるところは避けてコース取りをする。映像をみると羽生選手はジャージを着てるので、おそらく自分の曲かけ中ではない（ふつう脱ぐ）。なのでお互い気をつけましょう中ではあるけど、死角へ軌道をとった羽生選手のほうが、より気をつけましょう、かな。</p>
<p>ダイスは相手を視認してた（直前で両手で防ごうとするそぶりが見える）惨事には至りませんでしたが、お互いが死角からトップスピードのままぶつかると中国杯のときみたくなってしまいます。</p>
<p>BOでチェックしたときは進行方向がもろ死角になるので、結構危ない。特に（今回みたいな）CWのLboは人が来る可能性が高い。一般滑走と違って「逆行」という概念は基本的にはないのですが、CCWスケーターが多いこと、アップや流しのときは左回りで進むことが多いので、それに反する切り返しやCWバッククロスをするときは特に気をつけないと危ない。</p>
<p>爆走系やリンクを隅々まで使う人の曲かけ中は、壁沿いに立ってても邪魔になることがあるので、リンクから上がって休憩にあてることも。パトリックの曲かけで他の人が上がっちゃう、というのもたまにみます。</p>
<p>選手貸切でもニアミスは時折見かけます。それぞれが違う軌道を取るため完全に死角を排除することは難しいです。危なそうなときは、コーチが「危ない！！」って声を出してますね。</p>
<p>羽生選手の衝突が多いかに関しては、単純に注目度とメディアでの露出が多いからそう写るだけかとは思いますが、スピードも速く軌道も複雑で、かつ彼自身比較的没頭しやすいタイプに見受けられるので、十分気をつけてもらいたいところ。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;衝突事故の潜在的リスク&quot;&gt;&lt;a href=&quot;#衝突事故の潜在的リスク&quot; class=&quot;headerlink&quot; title=&quot;衝突事故の潜在的リスク&quot;&gt;&lt;/a&gt;衝突事故の潜在的リスク&lt;/h2&gt;&lt;p&gt;全日本選手権の公式練習中に羽生選手と村上選手が衝突したという報道がな
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>スピンの要求回転数</title>
    <link href="http://atarukodaka.github.io/hexo/figureskating/spin-rev.html"/>
    <id>http://atarukodaka.github.io/hexo/figureskating/spin-rev.html</id>
    <published>2015-12-28T15:00:00.000Z</published>
    <updated>2017-02-27T05:34:49.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本規定"><a href="#基本規定" class="headerlink" title="基本規定"></a>基本規定</h2><p>まず<strong>３回転</strong>はしないとスピンと見做されず、「スケーティング動作」扱いになります。んじゃ３回転すればいいかというとそうではなく、後述する基本姿勢や最低回転数の規定があります。なのでどちらかというと３回転未満ならつなぎやコレオで回っていいよ、ということかな。<br>ちなみにバッジテストだと５回転以上です。</p>
<ul>
<li>基本姿勢：単一姿勢スピンならその姿勢、コンビネーションなら複数個、基本姿勢(ULSCいずれか）で<strong>２回転</strong>回らないとダメです。基本姿勢は二回転しっかりと。</li>
<li>足換え要件：足換えの前後は、それぞれの足で<strong>３回転</strong>しないと足換えしたと見做されません。足変えはそれぞれ３回ずつ。</li>
<li>フライング規定: 着氷後<strong>２回転</strong>以内に基本姿勢形成、かつ<strong>２回転</strong>保持。できないとVがつく</li>
</ul>
<h2 id="プログラム規定"><a href="#プログラム規定" class="headerlink" title="プログラム規定"></a>プログラム規定</h2><ul>
<li>ショート：フライングスピンは<strong>６回転</strong>、コンビネーションは<strong>１０回転</strong>。男子の単一は<strong>６回転</strong>、女子のレイバックは<strong>８回転</strong></li>
<li>フリー規定：コンビネーションは<strong>１０回転</strong>。それ以外は<strong>６回転</strong>。当然足換え規定や基本姿勢要件は有効です。</li>
</ul>
<h2 id="レベル特徴"><a href="#レベル特徴" class="headerlink" title="レベル特徴"></a>レベル特徴</h2><ul>
<li>チェンジエッジ：チェンジエッジ前後でそれぞれ<strong>２回転</strong></li>
<li>８回転：キャメル基本・シット基本・難ポジ・NBPで足エッジをかえずに<strong>８回転</strong></li>
<li>ウィンドミル：<strong>３回転</strong></li>
<li>レイバック追加特徴：サイド↔バック：それぞれ<strong>２回転</strong>、レイバック→ビールマン：レイバックで<strong>８回転</strong></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本規定&quot;&gt;&lt;a href=&quot;#基本規定&quot; class=&quot;headerlink&quot; title=&quot;基本規定&quot;&gt;&lt;/a&gt;基本規定&lt;/h2&gt;&lt;p&gt;まず&lt;strong&gt;３回転&lt;/strong&gt;はしないとスピンと見做されず、「スケーティング動作」扱いになります。んじゃ３回転
    
    </summary>
    
    
  </entry>
  
</feed>
